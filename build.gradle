apply from: rootProject.file("dependencies.gradle")

buildscript {
    ext {
    }
    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        maven { url "http://nexus.aist.io/nexus/repository/maven-public/" }
        mavenLocal()
        mavenCentral()
        maven { url "https://maven.eveoh.nl/content/repositories/releases" }
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://repo.spring.io/plugins-release" }
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath "io.spring.gradle:dependency-management-plugin: $springDependencyManagementPluginVersion"
        classpath "io.franzbecker:gradle-lombok:1.14"
    }
}

allprojects {

}

subprojects {
    apply plugin: "java"
    apply plugin: "idea"
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'maven-publish'

    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        maven { url "http://nexus.aist.io/nexus/repository/maven-public/" }
        mavenLocal()
        mavenCentral()
        maven { url "https://build.shibboleth.net/nexus/content/repositories/releases" }
        maven { url "https://build.shibboleth.net/nexus/content/repositories/releases" }
        maven { url "https://oss.sonatype.org/content/repositories/releases" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
        maven { url "https://repo.spring.io/plugins-release/" }
        maven { url "https://dl.bintray.com/uniconiam/maven" }
        maven { url "https://jitpack.io" }
//        jcenter()
    }

    sourceSets {
        main {
            java {
                srcDirs = ["${projectDir}/src/main/java", "${projectDir}/src/main/groovy"]

            }
            resources {
                srcDirs = ["${projectDir}/src/main/resources"]
            }
        }
        test {
            java {
                srcDirs = ["${projectDir}/src/test/java", "${projectDir}/src/test/groovy"]

            }
            resources {
                srcDirs = ["${projectDir}/src/test/resources"]
            }
        }
    }

    compileJava.doLast {
        def currentTime = java.time.ZonedDateTime.now()
        jar.manifest {
            attributes("Implementation-Date": currentTime,
                    "Created-By": project.group)

        }
    }

    publishing {
        publications {
            maven(MavenPublication) {
                pom {
                    name = project.name
                    description = project.name
                    url = 'http://www.paranora.com'
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'paranora'
                            name = 'paranora'
                            email = 'paranora@163.com'
                        }
                    }
//                    scm {
//                        connection = 'scm:git:git://example.com/my-library.git'
//                        developerConnection = 'scm:git:ssh://example.com/my-library.git'
//                        url = 'http://example.com/my-library/'
//                    }
                }
                afterEvaluate {
                    if (project.getPlugins().findPlugin("war"))
                        from components.web
                    else
                        from components.java
                    groupId project.group
                    artifactId project.name
                    version project.version
                }
            }
        }
        repositories {
            maven {
                def releasesRepoUrl = "http://nexus.aist.io/nexus/repository/maven-releasess/"
                def snapshotsRepoUrl = "http://nexus.aist.io/nexus/repository/maven-snapshots/"
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                credentials {
                    username '1'
                    password '1'
                }
            }
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    task createPom {
        doLast {
            pom {
                project {
                    inceptionYear '2019'
                    licenses {
                        license {
                            name project.name
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }
                }
            }.writeTo("$projectDir/pom.xml")
        }
    }

    dependencyManagement {
        resolutionStrategy {
            cacheChangingModulesFor 0, 'seconds'
        }
    }

    dependencies {
        implementation group: 'org.projectlombok', name: 'lombok', version: lombokVersion
        annotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion
        compileOnly group: 'org.projectlombok', name: 'lombok', version: lombokVersion
    }

}
